package recursiveMethods;

/* @author: Ellie Ishii, elliei@hawaii.edu, 2024 */

public class recursiveMethods {

	// Convert a number from decimal to another number system
	static String inToString(int toPrint, int base) {

		// Base case
		if (toPrint < base) {
			if (toPrint >= 10) {
				char c = (char) ('a' + (toPrint - 10));
				return "" + c;
			}
			return ("" + toPrint);
		}

		// Recursive call

		// Modify this part of the method to convert the remainder into
		// hexadecimal if necessary (if the remainder is >= 10. convert to A-F

		else {
			int remainder = toPrint % base;
			if (remainder >= 10 && base == 16) {
				char c = (char) ('a' + (remainder - 10)); // Convert remainder to hexadecimal characters
				return inToString(toPrint / base, base) + c;
			} else {
				return inToString(toPrint / base, base) + remainder;
			}
		}
	}

	// Return an array of ternary numbers from 0-n
	public static String[] firstTernaryNumbers(int n) {
		String[] result = new String[n];
		for (int i = 0; i < result.length; i++) {
			result[i] = inToString(i, 3);
		}
		return result;
	}

	// Return an array of hex numbers from 0-n
	public static String[] firstHexNumbers(int n) {
		String[] result = new String[n];
		for (int i = 0; i < result.length; i++) {
			result[i] = inToString(i, 16);
		}
		return result;
	}

	public static int fib3(int n) {
		if (n < 3) {
			return 1;
		} else {
			return fib3(n - 1) + fib3(n - 2) + fib3(n - 3);
		}
	}

	// Main method
	public static void main(String[] args) {

		// Test ternary numbers 0 - 30
		System.out.println("==== Testing Ternary Numbers ====");
		String[] ternary = firstTernaryNumbers(31);
		for (int i = 0; i < ternary.length; i++) {
			System.out.println(ternary[i]);
		}

		System.out.println();

		// Test Hexadecimal numbers 500 - 524
		System.out.println("==== Testing Hexadecimal Numbers ====");
		String[] hex = firstHexNumbers(525);
		for (int i = 500; i < hex.length; i++) {
			System.out.println(hex[i]);
		}

		System.out.println();

		// HEXADECIMAL

		/*
		 * 0-9 is normal 10 = A 11 = B 12 = C 13 = D 14 = E 15 = F 16 = 10
		 */

		// Print the first 12 fib3 numbers
		System.out.println("==== Fibonacci Numbers ====");

		for (int i = 0; i < 12; i++) {
			System.out.println(fib3(i));
		}

		System.out.println();

		// Measure the runtime of Fibonacci for different values of n
		for (int n = 30; n <= 35; n += 1) {
			long startTime = System.currentTimeMillis();
			fib3(n);
			long endTime = System.currentTimeMillis();
			long runtime = endTime - startTime;
			System.out.println("Runtime for Fibonacci with n = " + n + ": " + runtime + " milliseconds");
		}
	}

}
